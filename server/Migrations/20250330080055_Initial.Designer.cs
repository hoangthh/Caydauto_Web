// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace server.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250330080055_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Cart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Carts");
                });

            modelBuilder.Entity("CartItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CartId")
                        .HasColumnType("int");

                    b.Property<int>("ColorId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CartId");

                    b.HasIndex("ColorId");

                    b.HasIndex("ProductId");

                    b.ToTable("CartItems");
                });

            modelBuilder.Entity("Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Danh mục Hộp bút - Túi bút chứa các sản phẩm liên quan.",
                            Name = "Hộp bút - Túi bút"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Danh mục Vở Học Sinh Campus chứa các sản phẩm liên quan.",
                            Name = "Vở Học Sinh Campus"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Danh mục Bút gel chứa các sản phẩm liên quan.",
                            Name = "Bút gel"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Danh mục Bút chì chứa các sản phẩm liên quan.",
                            Name = "Bút chì"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Danh mục Bút ghi nhớ chứa các sản phẩm liên quan.",
                            Name = "Bút ghi nhớ"
                        },
                        new
                        {
                            Id = 6,
                            Description = "Danh mục Dụng cụ tẩy chứa các sản phẩm liên quan.",
                            Name = "Dụng cụ tẩy"
                        },
                        new
                        {
                            Id = 7,
                            Description = "Danh mục Bút brush chứa các sản phẩm liên quan.",
                            Name = "Bút brush"
                        },
                        new
                        {
                            Id = 8,
                            Description = "Danh mục Băng keo chứa các sản phẩm liên quan.",
                            Name = "Băng keo"
                        },
                        new
                        {
                            Id = 9,
                            Description = "Danh mục Dụng cụ hỗ trợ chứa các sản phẩm liên quan.",
                            Name = "Dụng cụ hỗ trợ"
                        });
                });

            modelBuilder.Entity("CategoryProduct", b =>
                {
                    b.Property<int>("CategoriesId")
                        .HasColumnType("int");

                    b.Property<int>("ProductsId")
                        .HasColumnType("int");

                    b.HasKey("CategoriesId", "ProductsId");

                    b.HasIndex("ProductsId");

                    b.ToTable("CategoryProduct");

                    b.HasData(
                        new
                        {
                            CategoriesId = 4,
                            ProductsId = 1
                        },
                        new
                        {
                            CategoriesId = 2,
                            ProductsId = 1
                        },
                        new
                        {
                            CategoriesId = 3,
                            ProductsId = 2
                        },
                        new
                        {
                            CategoriesId = 6,
                            ProductsId = 3
                        },
                        new
                        {
                            CategoriesId = 8,
                            ProductsId = 4
                        },
                        new
                        {
                            CategoriesId = 4,
                            ProductsId = 4
                        },
                        new
                        {
                            CategoriesId = 7,
                            ProductsId = 5
                        },
                        new
                        {
                            CategoriesId = 9,
                            ProductsId = 5
                        },
                        new
                        {
                            CategoriesId = 5,
                            ProductsId = 6
                        },
                        new
                        {
                            CategoriesId = 2,
                            ProductsId = 6
                        },
                        new
                        {
                            CategoriesId = 6,
                            ProductsId = 6
                        },
                        new
                        {
                            CategoriesId = 2,
                            ProductsId = 7
                        },
                        new
                        {
                            CategoriesId = 7,
                            ProductsId = 8
                        },
                        new
                        {
                            CategoriesId = 2,
                            ProductsId = 8
                        },
                        new
                        {
                            CategoriesId = 4,
                            ProductsId = 9
                        },
                        new
                        {
                            CategoriesId = 9,
                            ProductsId = 10
                        },
                        new
                        {
                            CategoriesId = 7,
                            ProductsId = 10
                        },
                        new
                        {
                            CategoriesId = 3,
                            ProductsId = 10
                        });
                });

            modelBuilder.Entity("Color", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Colors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Black"
                        },
                        new
                        {
                            Id = 2,
                            Name = "White"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Gray"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Orange"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Yellow"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Green"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Blue"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Purple"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Pink"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Red"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Brown"
                        });
                });

            modelBuilder.Entity("ColorProduct", b =>
                {
                    b.Property<int>("ColorsId")
                        .HasColumnType("int");

                    b.Property<int>("ProductsId")
                        .HasColumnType("int");

                    b.HasKey("ColorsId", "ProductsId");

                    b.HasIndex("ProductsId");

                    b.ToTable("ColorProduct");

                    b.HasData(
                        new
                        {
                            ColorsId = 11,
                            ProductsId = 1
                        },
                        new
                        {
                            ColorsId = 7,
                            ProductsId = 1
                        },
                        new
                        {
                            ColorsId = 10,
                            ProductsId = 1
                        },
                        new
                        {
                            ColorsId = 10,
                            ProductsId = 2
                        },
                        new
                        {
                            ColorsId = 5,
                            ProductsId = 2
                        },
                        new
                        {
                            ColorsId = 11,
                            ProductsId = 2
                        },
                        new
                        {
                            ColorsId = 3,
                            ProductsId = 3
                        },
                        new
                        {
                            ColorsId = 10,
                            ProductsId = 3
                        },
                        new
                        {
                            ColorsId = 1,
                            ProductsId = 3
                        },
                        new
                        {
                            ColorsId = 9,
                            ProductsId = 4
                        },
                        new
                        {
                            ColorsId = 8,
                            ProductsId = 4
                        },
                        new
                        {
                            ColorsId = 3,
                            ProductsId = 5
                        },
                        new
                        {
                            ColorsId = 5,
                            ProductsId = 5
                        },
                        new
                        {
                            ColorsId = 9,
                            ProductsId = 6
                        },
                        new
                        {
                            ColorsId = 11,
                            ProductsId = 6
                        },
                        new
                        {
                            ColorsId = 2,
                            ProductsId = 7
                        },
                        new
                        {
                            ColorsId = 3,
                            ProductsId = 7
                        },
                        new
                        {
                            ColorsId = 7,
                            ProductsId = 7
                        },
                        new
                        {
                            ColorsId = 6,
                            ProductsId = 8
                        },
                        new
                        {
                            ColorsId = 11,
                            ProductsId = 8
                        },
                        new
                        {
                            ColorsId = 10,
                            ProductsId = 9
                        },
                        new
                        {
                            ColorsId = 9,
                            ProductsId = 9
                        },
                        new
                        {
                            ColorsId = 8,
                            ProductsId = 10
                        },
                        new
                        {
                            ColorsId = 3,
                            ProductsId = 10
                        },
                        new
                        {
                            ColorsId = 11,
                            ProductsId = 10
                        });
                });

            modelBuilder.Entity("Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("CommentImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CommentId")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("CommentId");

                    b.ToTable("CommentImages");
                });

            modelBuilder.Entity("Discount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Discounts");
                });

            modelBuilder.Entity("Image", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Images");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ProductId = 1,
                            Url = "https://picsum.photos/500/500/?image=203"
                        },
                        new
                        {
                            Id = 2,
                            ProductId = 1,
                            Url = "https://picsum.photos/500/500/?image=224"
                        },
                        new
                        {
                            Id = 3,
                            ProductId = 1,
                            Url = "https://picsum.photos/500/500/?image=355"
                        },
                        new
                        {
                            Id = 4,
                            ProductId = 1,
                            Url = "https://picsum.photos/500/500/?image=536"
                        },
                        new
                        {
                            Id = 5,
                            ProductId = 1,
                            Url = "https://picsum.photos/500/500/?image=971"
                        },
                        new
                        {
                            Id = 6,
                            ProductId = 1,
                            Url = "https://picsum.photos/500/500/?image=769"
                        },
                        new
                        {
                            Id = 7,
                            ProductId = 1,
                            Url = "https://picsum.photos/500/500/?image=928"
                        },
                        new
                        {
                            Id = 8,
                            ProductId = 1,
                            Url = "https://picsum.photos/500/500/?image=770"
                        },
                        new
                        {
                            Id = 9,
                            ProductId = 1,
                            Url = "https://picsum.photos/500/500/?image=202"
                        },
                        new
                        {
                            Id = 10,
                            ProductId = 1,
                            Url = "https://picsum.photos/500/500/?image=1059"
                        },
                        new
                        {
                            Id = 11,
                            ProductId = 2,
                            Url = "https://picsum.photos/500/500/?image=703"
                        },
                        new
                        {
                            Id = 12,
                            ProductId = 2,
                            Url = "https://picsum.photos/500/500/?image=874"
                        },
                        new
                        {
                            Id = 13,
                            ProductId = 2,
                            Url = "https://picsum.photos/500/500/?image=500"
                        },
                        new
                        {
                            Id = 14,
                            ProductId = 2,
                            Url = "https://picsum.photos/500/500/?image=1078"
                        },
                        new
                        {
                            Id = 15,
                            ProductId = 2,
                            Url = "https://picsum.photos/500/500/?image=1055"
                        },
                        new
                        {
                            Id = 16,
                            ProductId = 2,
                            Url = "https://picsum.photos/500/500/?image=1015"
                        },
                        new
                        {
                            Id = 17,
                            ProductId = 2,
                            Url = "https://picsum.photos/500/500/?image=708"
                        },
                        new
                        {
                            Id = 18,
                            ProductId = 2,
                            Url = "https://picsum.photos/500/500/?image=31"
                        },
                        new
                        {
                            Id = 19,
                            ProductId = 2,
                            Url = "https://picsum.photos/500/500/?image=875"
                        },
                        new
                        {
                            Id = 20,
                            ProductId = 2,
                            Url = "https://picsum.photos/500/500/?image=148"
                        },
                        new
                        {
                            Id = 21,
                            ProductId = 3,
                            Url = "https://picsum.photos/500/500/?image=305"
                        },
                        new
                        {
                            Id = 22,
                            ProductId = 3,
                            Url = "https://picsum.photos/500/500/?image=632"
                        },
                        new
                        {
                            Id = 23,
                            ProductId = 3,
                            Url = "https://picsum.photos/500/500/?image=723"
                        },
                        new
                        {
                            Id = 24,
                            ProductId = 3,
                            Url = "https://picsum.photos/500/500/?image=30"
                        },
                        new
                        {
                            Id = 25,
                            ProductId = 3,
                            Url = "https://picsum.photos/500/500/?image=282"
                        },
                        new
                        {
                            Id = 26,
                            ProductId = 3,
                            Url = "https://picsum.photos/500/500/?image=745"
                        },
                        new
                        {
                            Id = 27,
                            ProductId = 3,
                            Url = "https://picsum.photos/500/500/?image=45"
                        },
                        new
                        {
                            Id = 28,
                            ProductId = 3,
                            Url = "https://picsum.photos/500/500/?image=312"
                        },
                        new
                        {
                            Id = 29,
                            ProductId = 3,
                            Url = "https://picsum.photos/500/500/?image=713"
                        },
                        new
                        {
                            Id = 30,
                            ProductId = 3,
                            Url = "https://picsum.photos/500/500/?image=1049"
                        },
                        new
                        {
                            Id = 31,
                            ProductId = 4,
                            Url = "https://picsum.photos/500/500/?image=986"
                        },
                        new
                        {
                            Id = 32,
                            ProductId = 4,
                            Url = "https://picsum.photos/500/500/?image=384"
                        },
                        new
                        {
                            Id = 33,
                            ProductId = 4,
                            Url = "https://picsum.photos/500/500/?image=440"
                        },
                        new
                        {
                            Id = 34,
                            ProductId = 4,
                            Url = "https://picsum.photos/500/500/?image=364"
                        },
                        new
                        {
                            Id = 35,
                            ProductId = 4,
                            Url = "https://picsum.photos/500/500/?image=308"
                        },
                        new
                        {
                            Id = 36,
                            ProductId = 4,
                            Url = "https://picsum.photos/500/500/?image=216"
                        },
                        new
                        {
                            Id = 37,
                            ProductId = 4,
                            Url = "https://picsum.photos/500/500/?image=335"
                        },
                        new
                        {
                            Id = 38,
                            ProductId = 4,
                            Url = "https://picsum.photos/500/500/?image=155"
                        },
                        new
                        {
                            Id = 39,
                            ProductId = 4,
                            Url = "https://picsum.photos/500/500/?image=574"
                        },
                        new
                        {
                            Id = 40,
                            ProductId = 4,
                            Url = "https://picsum.photos/500/500/?image=890"
                        },
                        new
                        {
                            Id = 41,
                            ProductId = 5,
                            Url = "https://picsum.photos/500/500/?image=45"
                        },
                        new
                        {
                            Id = 42,
                            ProductId = 5,
                            Url = "https://picsum.photos/500/500/?image=796"
                        },
                        new
                        {
                            Id = 43,
                            ProductId = 5,
                            Url = "https://picsum.photos/500/500/?image=683"
                        },
                        new
                        {
                            Id = 44,
                            ProductId = 5,
                            Url = "https://picsum.photos/500/500/?image=1052"
                        },
                        new
                        {
                            Id = 45,
                            ProductId = 5,
                            Url = "https://picsum.photos/500/500/?image=292"
                        },
                        new
                        {
                            Id = 46,
                            ProductId = 5,
                            Url = "https://picsum.photos/500/500/?image=792"
                        },
                        new
                        {
                            Id = 47,
                            ProductId = 5,
                            Url = "https://picsum.photos/500/500/?image=488"
                        },
                        new
                        {
                            Id = 48,
                            ProductId = 5,
                            Url = "https://picsum.photos/500/500/?image=664"
                        },
                        new
                        {
                            Id = 49,
                            ProductId = 5,
                            Url = "https://picsum.photos/500/500/?image=50"
                        },
                        new
                        {
                            Id = 50,
                            ProductId = 5,
                            Url = "https://picsum.photos/500/500/?image=274"
                        },
                        new
                        {
                            Id = 51,
                            ProductId = 6,
                            Url = "https://picsum.photos/500/500/?image=402"
                        },
                        new
                        {
                            Id = 52,
                            ProductId = 6,
                            Url = "https://picsum.photos/500/500/?image=578"
                        },
                        new
                        {
                            Id = 53,
                            ProductId = 6,
                            Url = "https://picsum.photos/500/500/?image=387"
                        },
                        new
                        {
                            Id = 54,
                            ProductId = 6,
                            Url = "https://picsum.photos/500/500/?image=378"
                        },
                        new
                        {
                            Id = 55,
                            ProductId = 6,
                            Url = "https://picsum.photos/500/500/?image=266"
                        },
                        new
                        {
                            Id = 56,
                            ProductId = 6,
                            Url = "https://picsum.photos/500/500/?image=386"
                        },
                        new
                        {
                            Id = 57,
                            ProductId = 6,
                            Url = "https://picsum.photos/500/500/?image=421"
                        },
                        new
                        {
                            Id = 58,
                            ProductId = 6,
                            Url = "https://picsum.photos/500/500/?image=963"
                        },
                        new
                        {
                            Id = 59,
                            ProductId = 6,
                            Url = "https://picsum.photos/500/500/?image=656"
                        },
                        new
                        {
                            Id = 60,
                            ProductId = 6,
                            Url = "https://picsum.photos/500/500/?image=1027"
                        },
                        new
                        {
                            Id = 61,
                            ProductId = 7,
                            Url = "https://picsum.photos/500/500/?image=486"
                        },
                        new
                        {
                            Id = 62,
                            ProductId = 7,
                            Url = "https://picsum.photos/500/500/?image=284"
                        },
                        new
                        {
                            Id = 63,
                            ProductId = 7,
                            Url = "https://picsum.photos/500/500/?image=578"
                        },
                        new
                        {
                            Id = 64,
                            ProductId = 7,
                            Url = "https://picsum.photos/500/500/?image=776"
                        },
                        new
                        {
                            Id = 65,
                            ProductId = 7,
                            Url = "https://picsum.photos/500/500/?image=1018"
                        },
                        new
                        {
                            Id = 66,
                            ProductId = 7,
                            Url = "https://picsum.photos/500/500/?image=146"
                        },
                        new
                        {
                            Id = 67,
                            ProductId = 7,
                            Url = "https://picsum.photos/500/500/?image=368"
                        },
                        new
                        {
                            Id = 68,
                            ProductId = 7,
                            Url = "https://picsum.photos/500/500/?image=185"
                        },
                        new
                        {
                            Id = 69,
                            ProductId = 7,
                            Url = "https://picsum.photos/500/500/?image=1013"
                        },
                        new
                        {
                            Id = 70,
                            ProductId = 7,
                            Url = "https://picsum.photos/500/500/?image=11"
                        },
                        new
                        {
                            Id = 71,
                            ProductId = 8,
                            Url = "https://picsum.photos/500/500/?image=321"
                        },
                        new
                        {
                            Id = 72,
                            ProductId = 8,
                            Url = "https://picsum.photos/500/500/?image=362"
                        },
                        new
                        {
                            Id = 73,
                            ProductId = 8,
                            Url = "https://picsum.photos/500/500/?image=88"
                        },
                        new
                        {
                            Id = 74,
                            ProductId = 8,
                            Url = "https://picsum.photos/500/500/?image=460"
                        },
                        new
                        {
                            Id = 75,
                            ProductId = 8,
                            Url = "https://picsum.photos/500/500/?image=768"
                        },
                        new
                        {
                            Id = 76,
                            ProductId = 8,
                            Url = "https://picsum.photos/500/500/?image=532"
                        },
                        new
                        {
                            Id = 77,
                            ProductId = 8,
                            Url = "https://picsum.photos/500/500/?image=1011"
                        },
                        new
                        {
                            Id = 78,
                            ProductId = 8,
                            Url = "https://picsum.photos/500/500/?image=359"
                        },
                        new
                        {
                            Id = 79,
                            ProductId = 8,
                            Url = "https://picsum.photos/500/500/?image=598"
                        },
                        new
                        {
                            Id = 80,
                            ProductId = 8,
                            Url = "https://picsum.photos/500/500/?image=431"
                        },
                        new
                        {
                            Id = 81,
                            ProductId = 9,
                            Url = "https://picsum.photos/500/500/?image=150"
                        },
                        new
                        {
                            Id = 82,
                            ProductId = 9,
                            Url = "https://picsum.photos/500/500/?image=137"
                        },
                        new
                        {
                            Id = 83,
                            ProductId = 9,
                            Url = "https://picsum.photos/500/500/?image=0"
                        },
                        new
                        {
                            Id = 84,
                            ProductId = 9,
                            Url = "https://picsum.photos/500/500/?image=970"
                        },
                        new
                        {
                            Id = 85,
                            ProductId = 9,
                            Url = "https://picsum.photos/500/500/?image=639"
                        },
                        new
                        {
                            Id = 86,
                            ProductId = 9,
                            Url = "https://picsum.photos/500/500/?image=1043"
                        },
                        new
                        {
                            Id = 87,
                            ProductId = 9,
                            Url = "https://picsum.photos/500/500/?image=863"
                        },
                        new
                        {
                            Id = 88,
                            ProductId = 9,
                            Url = "https://picsum.photos/500/500/?image=486"
                        },
                        new
                        {
                            Id = 89,
                            ProductId = 9,
                            Url = "https://picsum.photos/500/500/?image=583"
                        },
                        new
                        {
                            Id = 90,
                            ProductId = 9,
                            Url = "https://picsum.photos/500/500/?image=535"
                        },
                        new
                        {
                            Id = 91,
                            ProductId = 10,
                            Url = "https://picsum.photos/500/500/?image=910"
                        },
                        new
                        {
                            Id = 92,
                            ProductId = 10,
                            Url = "https://picsum.photos/500/500/?image=254"
                        },
                        new
                        {
                            Id = 93,
                            ProductId = 10,
                            Url = "https://picsum.photos/500/500/?image=13"
                        },
                        new
                        {
                            Id = 94,
                            ProductId = 10,
                            Url = "https://picsum.photos/500/500/?image=733"
                        },
                        new
                        {
                            Id = 95,
                            ProductId = 10,
                            Url = "https://picsum.photos/500/500/?image=317"
                        },
                        new
                        {
                            Id = 96,
                            ProductId = 10,
                            Url = "https://picsum.photos/500/500/?image=180"
                        },
                        new
                        {
                            Id = 97,
                            ProductId = 10,
                            Url = "https://picsum.photos/500/500/?image=148"
                        },
                        new
                        {
                            Id = 98,
                            ProductId = 10,
                            Url = "https://picsum.photos/500/500/?image=438"
                        },
                        new
                        {
                            Id = 99,
                            ProductId = 10,
                            Url = "https://picsum.photos/500/500/?image=811"
                        },
                        new
                        {
                            Id = 100,
                            ProductId = 10,
                            Url = "https://picsum.photos/500/500/?image=928"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("DiscountAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("DiscountId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OrderStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShippingAddress")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("ShippingDiscount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ShippingFee")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SubTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DiscountId");

                    b.HasIndex("OrderDate");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ColorId")
                        .HasColumnType("int");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ColorId");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Sold")
                        .HasColumnType("int");

                    b.Property<int>("StockQuantity")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Name");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Brand = "Marvy",
                            CreatedDate = new DateTime(2024, 12, 12, 14, 33, 33, 663, DateTimeKind.Local).AddTicks(6074),
                            Description = "The Football Is Good For Training And Recreational Purposes",
                            Name = "Rustic Soft Soap",
                            Price = 723.504384713329500m,
                            Sold = 7,
                            StockQuantity = 19,
                            UpdatedDate = new DateTime(2025, 3, 29, 10, 44, 57, 37, DateTimeKind.Local).AddTicks(8819)
                        },
                        new
                        {
                            Id = 2,
                            Brand = "Pilot",
                            CreatedDate = new DateTime(2024, 5, 26, 4, 33, 50, 544, DateTimeKind.Local).AddTicks(6862),
                            Description = "New range of formal shirts are designed keeping you in mind. With fits and styling that will make you stand apart",
                            Name = "Awesome Cotton Shirt",
                            Price = 276.013261607743900m,
                            Sold = 4,
                            StockQuantity = 70,
                            UpdatedDate = new DateTime(2025, 3, 5, 3, 20, 21, 653, DateTimeKind.Local).AddTicks(9822)
                        },
                        new
                        {
                            Id = 3,
                            Brand = "Marunman",
                            CreatedDate = new DateTime(2024, 8, 3, 7, 40, 49, 753, DateTimeKind.Local).AddTicks(1261),
                            Description = "The beautiful range of Apple Naturalé that has an exciting mix of natural ingredients. With the Goodness of 100% Natural Ingredients",
                            Name = "Ergonomic Granite Table",
                            Price = 128.644830928727600m,
                            Sold = 21,
                            StockQuantity = 2,
                            UpdatedDate = new DateTime(2025, 3, 18, 3, 52, 50, 58, DateTimeKind.Local).AddTicks(1158)
                        },
                        new
                        {
                            Id = 4,
                            Brand = "Tombow",
                            CreatedDate = new DateTime(2024, 9, 21, 20, 24, 33, 657, DateTimeKind.Local).AddTicks(2693),
                            Description = "Ergonomic executive chair upholstered in bonded black leather and PVC padded seat and back for all-day comfort and support",
                            Name = "Rustic Metal Soap",
                            Price = 452.952143492489800m,
                            Sold = 42,
                            StockQuantity = 20,
                            UpdatedDate = new DateTime(2025, 3, 3, 18, 32, 44, 103, DateTimeKind.Local).AddTicks(4926)
                        },
                        new
                        {
                            Id = 5,
                            Brand = "Crayola",
                            CreatedDate = new DateTime(2024, 8, 18, 17, 59, 56, 856, DateTimeKind.Local).AddTicks(9039),
                            Description = "New ABC 13 9370, 13.3, 5th Gen CoreA5-8250U, 8GB RAM, 256GB SSD, power UHD Graphics, OS 10 Home, OS Office A & J 2016",
                            Name = "Refined Soft Chair",
                            Price = 24.176629853292340m,
                            Sold = 10,
                            StockQuantity = 69,
                            UpdatedDate = new DateTime(2025, 3, 12, 20, 8, 55, 529, DateTimeKind.Local).AddTicks(2929)
                        },
                        new
                        {
                            Id = 6,
                            Brand = "Marunman",
                            CreatedDate = new DateTime(2024, 7, 20, 17, 25, 26, 93, DateTimeKind.Local).AddTicks(1771),
                            Description = "The slim & simple Maple Gaming Keyboard from Dev Byte comes with a sleek body and 7- Color RGB LED Back-lighting for smart functionality",
                            Name = "Gorgeous Metal Chips",
                            Price = 48.154511512219420m,
                            Sold = 43,
                            StockQuantity = 46,
                            UpdatedDate = new DateTime(2025, 3, 17, 4, 9, 12, 144, DateTimeKind.Local).AddTicks(6502)
                        },
                        new
                        {
                            Id = 7,
                            Brand = "Sakura",
                            CreatedDate = new DateTime(2024, 9, 26, 5, 57, 48, 192, DateTimeKind.Local).AddTicks(7638),
                            Description = "Boston's most advanced compression wear technology increases muscle oxygenation, stabilizes active muscles",
                            Name = "Tasty Concrete Soap",
                            Price = 100.9885504201169400m,
                            Sold = 29,
                            StockQuantity = 9,
                            UpdatedDate = new DateTime(2025, 3, 12, 15, 18, 9, 371, DateTimeKind.Local).AddTicks(102)
                        },
                        new
                        {
                            Id = 8,
                            Brand = "Plus",
                            CreatedDate = new DateTime(2024, 10, 7, 20, 47, 40, 841, DateTimeKind.Local).AddTicks(7433),
                            Description = "Carbonite web goalkeeper gloves are ergonomically designed to give easy fit",
                            Name = "Licensed Frozen Shoes",
                            Price = 778.725843341654000m,
                            Sold = 31,
                            StockQuantity = 88,
                            UpdatedDate = new DateTime(2025, 3, 18, 2, 53, 26, 952, DateTimeKind.Local).AddTicks(4723)
                        },
                        new
                        {
                            Id = 9,
                            Brand = "Plus",
                            CreatedDate = new DateTime(2025, 1, 16, 10, 46, 31, 444, DateTimeKind.Local).AddTicks(3095),
                            Description = "The slim & simple Maple Gaming Keyboard from Dev Byte comes with a sleek body and 7- Color RGB LED Back-lighting for smart functionality",
                            Name = "Handcrafted Steel Pants",
                            Price = 652.895354914541500m,
                            Sold = 24,
                            StockQuantity = 47,
                            UpdatedDate = new DateTime(2025, 3, 27, 8, 5, 30, 909, DateTimeKind.Local).AddTicks(6486)
                        },
                        new
                        {
                            Id = 10,
                            Brand = "Tombow",
                            CreatedDate = new DateTime(2024, 5, 22, 14, 18, 1, 26, DateTimeKind.Local).AddTicks(6156),
                            Description = "Ergonomic executive chair upholstered in bonded black leather and PVC padded seat and back for all-day comfort and support",
                            Name = "Handmade Cotton Salad",
                            Price = 331.119815747339400m,
                            Sold = 17,
                            StockQuantity = 69,
                            UpdatedDate = new DateTime(2025, 3, 29, 20, 11, 53, 598, DateTimeKind.Local).AddTicks(5749)
                        });
                });

            modelBuilder.Entity("ProductUser", b =>
                {
                    b.Property<int>("WishListId")
                        .HasColumnType("int");

                    b.Property<int>("WishListedByUsersId")
                        .HasColumnType("int");

                    b.HasKey("WishListId", "WishListedByUsersId");

                    b.HasIndex("WishListedByUsersId");

                    b.ToTable("ProductUser");
                });

            modelBuilder.Entity("Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("Roles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Administrator role",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = 2,
                            Description = "User role",
                            Name = "User",
                            NormalizedName = "USER"
                        });
                });

            modelBuilder.Entity("User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasFilter("[Email] IS NOT NULL");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex("RoleId");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("Cart", b =>
                {
                    b.HasOne("User", "User")
                        .WithOne("Cart")
                        .HasForeignKey("Cart", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("CartItem", b =>
                {
                    b.HasOne("Cart", "Cart")
                        .WithMany("CartItems")
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Color", "Color")
                        .WithMany()
                        .HasForeignKey("ColorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cart");

                    b.Navigation("Color");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("CategoryProduct", b =>
                {
                    b.HasOne("Category", null)
                        .WithMany()
                        .HasForeignKey("CategoriesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Product", null)
                        .WithMany()
                        .HasForeignKey("ProductsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ColorProduct", b =>
                {
                    b.HasOne("Color", null)
                        .WithMany()
                        .HasForeignKey("ColorsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Product", null)
                        .WithMany()
                        .HasForeignKey("ProductsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Comment", b =>
                {
                    b.HasOne("Product", "Product")
                        .WithMany("Comments")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("User", "User")
                        .WithMany("Comments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CommentImage", b =>
                {
                    b.HasOne("Comment", "Comment")
                        .WithMany("Images")
                        .HasForeignKey("CommentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Comment");
                });

            modelBuilder.Entity("Image", b =>
                {
                    b.HasOne("Product", "Product")
                        .WithMany("Images")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Order", b =>
                {
                    b.HasOne("Discount", "Discount")
                        .WithMany()
                        .HasForeignKey("DiscountId");

                    b.HasOne("User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Discount");

                    b.Navigation("User");
                });

            modelBuilder.Entity("OrderItem", b =>
                {
                    b.HasOne("Color", "Color")
                        .WithMany()
                        .HasForeignKey("ColorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Color");

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ProductUser", b =>
                {
                    b.HasOne("Product", null)
                        .WithMany()
                        .HasForeignKey("WishListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("User", null)
                        .WithMany()
                        .HasForeignKey("WishListedByUsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("User", b =>
                {
                    b.HasOne("Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Cart", b =>
                {
                    b.Navigation("CartItems");
                });

            modelBuilder.Entity("Comment", b =>
                {
                    b.Navigation("Images");
                });

            modelBuilder.Entity("Order", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("Product", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Images");
                });

            modelBuilder.Entity("Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("User", b =>
                {
                    b.Navigation("Cart")
                        .IsRequired();

                    b.Navigation("Comments");

                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
